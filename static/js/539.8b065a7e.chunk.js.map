{"version":3,"file":"static/js/539.8b065a7e.chunk.js","mappings":"sPACA,EAA6B,+BAA7B,EAA+E,qCAA/E,EAA4I,0CAA5I,EAAwM,oCAAxM,EAA4P,kC,SCGtPA,EAAQC,EAAQ,KA8EtB,EA5EmB,WACf,IAAQC,GAAaC,EAAAA,EAAAA,MAAbD,SACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAASG,KAAKC,MAAMC,aAAaC,QAAQ,YAArE,eAAOC,EAAP,KAAeC,EAAf,MAEAC,EAAAA,EAAAA,YAAU,WACHF,GACFF,aAAaK,QAAQ,SAASP,KAAKQ,UAAUJ,MAEhD,CAACA,IATkB,wCAgCrB,WAAiCK,GAAjC,6EACoB,mCACC,gCAFrB,kBAK4BhB,EAAMiB,IAAN,UAHP,gCAGO,gCAJR,mCAIQ,kBACoCD,IANhE,UAKcE,EALd,OAOQC,QAAQC,IAAIF,EAAMG,KAAKC,WACnBJ,EAAMG,KAAKC,QAAQC,OAAS,GARxC,wBASYC,MAAM,6YATlB,oDAYeN,EAAMG,KAAKC,SAZ1B,kCAcQH,QAAQC,IAAR,MAdR,2DAhCqB,sBAkDrB,OACI,iCACI,kBAAMK,UAAYC,EAAeC,SAjCpB,SAAAC,GACjBA,EAAEC,iBAEiB,KAAhBxB,EAAKyB,QAtBS,2CA2BjBC,CAAkB1B,GAAM2B,MAAK,SAAAX,GAAI,OAAIT,EAAUS,MAE/Cf,EAAQ,KANJkB,MAAM,mMA6BN,WACA,kBACIC,UAAYC,EACZO,KAAK,OACLC,SA3CS,SAAAN,GACjB,IAAQO,EAAUP,EAAEQ,cAAZD,MAER7B,EAAQ6B,IAyCAE,aAAa,MACbC,WAAS,EACTC,YAAY,mBAEhB,mBAAQN,KAAK,SAASR,UAAYC,EAAlC,UACI,iBAAMD,UAAYC,EAAlB,0BAIJ,wBACKf,GAAUA,EAAO6B,KAAI,SAAAL,GAAK,OAAI,yBAC3B,SAAC,KAAD,CAAMM,GAAE,UAAKvC,EAAL,YAAkBiC,EAAMO,IAChCjB,UAAYC,EADZ,UAC8B,uBAAIS,EAAMQ,oBAFJR,EAAMO","sources":["webpack://goit-react-hw-05-movies/./src/components/MoviesPage/MoviesPage.module.css?564c","components/MoviesPage/MoviesPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"SearchForm\":\"MoviesPage_SearchForm__kpN7l\",\"SearchFormButton\":\"MoviesPage_SearchFormButton__pBDYN\",\"SearchFormButtonLabel\":\"MoviesPage_SearchFormButtonLabel__q049z\",\"SearchFormInput\":\"MoviesPage_SearchFormInput__9qTli\",\"linksOfMovies\":\"MoviesPage_linksOfMovies__BSlkS\"};","import { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n// import slugify from 'slugify';\nimport s from './MoviesPage.module.css';\nconst axios = require('axios');\n\nconst MoviesPage = () => {\n    const { pathname } = useLocation();\n    const [name, setName] = useState('');\n    const [values, setValues] = useState(JSON.parse(localStorage.getItem(\"values\")));\n\n    useEffect(() => {\n        if(values) {\n         localStorage.setItem(\"values\",JSON.stringify(values));  \n        }\n    },[values])\n\n    // const makeSlug = string => slugify(string,{ replacement:'=', lower: true });\n\n    const handleChange = e => {\n        const { value } = e.currentTarget;\n\n        setName(value);\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        if(name.trim() === '') {\n            alert('Пожалуйста введите поисковое слово.');\n            return;\n        }\n\n        fetchMoviesSearch(name).then(data => setValues(data));\n       \n        setName('');\n    }\n\n    async function fetchMoviesSearch(query) {\n        const API_KEY = '61d280fbc4e0ab3fee827783c53f7600';\n        const BASE_URL = 'https://api.themoviedb.org/3/';\n\n        try {\n            const movie = await axios.get(\n                `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}`);\n            console.log(movie.data.results);\n            if (movie.data.results.length < 1) {\n                alert('Пожалуйста введите корректное название или возможно такой фильм не найден');\n                return;\n            }\n            return movie.data.results;\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    return(\n        <>\n            <form className={ s.SearchForm } onSubmit={ handleSubmit }>\n            <input\n                className={ s.SearchFormInput }\n                type=\"text\"\n                onChange={ handleChange }\n                autoComplete=\"off\"\n                autoFocus\n                placeholder=\"Search movies\"\n            />\n            <button type=\"submit\" className={ s.SearchFormButton }>\n                <span className={ s.SearchFormButtonLabel }>Search</span>\n            </button>\n            </form>\n\n            <ul>\n                {values && values.map(value => <li key={value.id}>\n                    <Link to={`${pathname}/${ value.id }`} \n                    className={ s.linksOfMovies }><b>{value.original_title}</b></Link></li>)\n                }\n            </ul>\n        </>\n    )\n\n}\nexport default MoviesPage;"],"names":["axios","require","pathname","useLocation","useState","name","setName","JSON","parse","localStorage","getItem","values","setValues","useEffect","setItem","stringify","query","get","movie","console","log","data","results","length","alert","className","s","onSubmit","e","preventDefault","trim","fetchMoviesSearch","then","type","onChange","value","currentTarget","autoComplete","autoFocus","placeholder","map","to","id","original_title"],"sourceRoot":""}