{"version":3,"file":"static/js/539.19c9ed99.chunk.js","mappings":"sPACA,EAA6B,+BAA7B,EAA+E,qCAA/E,EAA4I,0CAA5I,EAAwM,oCAAxM,EAA4P,kC,SCEtPA,EAAQC,EAAQ,KAqEtB,EAnEmB,WACf,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,MAArC,eAAOG,EAAP,KAAeC,EAAf,KAHqB,wCAwBrB,WAAiCC,GAAjC,6EACoB,mCACC,gCAFrB,kBAK4BT,EAAMU,IAAN,UAHP,gCAGO,gCAJR,mCAIQ,kBACoCD,IANhE,cAKcE,EALd,OAOQC,QAAQC,IAAIF,EAAMG,KAAKC,SAP/B,kBAQeJ,EAAMG,KAAKC,SAR1B,kCAUQH,QAAQC,IAAR,MAVR,2DAxBqB,sBAsCrB,OACI,iCACI,kBAAMG,UAAYC,EAAeC,SA7BpB,SAAAC,GACjBA,EAAEC,iBAEiB,KAAhBf,EAAKgB,QAdS,2CAmBjBC,CAAkBjB,GAAMkB,MAAK,SAAAT,GAAI,OAAIN,EAAUM,MAE/CR,EAAQ,KANJkB,MAAM,mMAyBN,WACA,kBACIR,UAAYC,EACZQ,KAAK,OACLC,SAvCS,SAAAP,GACjB,IAAQQ,EAAUR,EAAES,cAAZD,MAERrB,EAAQqB,IAqCAE,aAAa,MACbC,WAAS,EACTC,YAAY,mBAEhB,mBAAQN,KAAK,SAAST,UAAYC,EAAlC,UACI,iBAAMD,UAAYC,EAAlB,0BAIJ,wBACKV,GAAUA,EAAOyB,KAAI,SAAAL,GAAK,OAAI,yBAC3B,SAAC,KAAD,CAAMM,GAAI,CACVC,SAAS,WAAD,OAAYP,EAAMQ,IAC1BC,MAAO,CAAEC,KAAKnC,IAEdc,UAAYC,EAJZ,UAI8B,uBAAIU,EAAMW,oBALJX,EAAMQ","sources":["webpack://goit-react-hw-05-movies/./src/components/MoviesPage/MoviesPage.module.css?564c","components/MoviesPage/MoviesPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"SearchForm\":\"MoviesPage_SearchForm__kpN7l\",\"SearchFormButton\":\"MoviesPage_SearchFormButton__pBDYN\",\"SearchFormButtonLabel\":\"MoviesPage_SearchFormButtonLabel__q049z\",\"SearchFormInput\":\"MoviesPage_SearchFormInput__9qTli\",\"linksOfMovies\":\"MoviesPage_linksOfMovies__BSlkS\"};","import { useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport s from './MoviesPage.module.css';\nconst axios = require('axios');\n\nconst MoviesPage = () => {\n    const location = useLocation();\n    const [name, setName] = useState('');\n    const [values, setValues] = useState(null);\n\n    const handleChange = e => {\n        const { value } = e.currentTarget;\n\n        setName(value);\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        if(name.trim() === '') {\n            alert('Пожалуйста введите поисковое слово.');\n            return;\n        }\n\n        fetchMoviesSearch(name).then(data => setValues(data));\n\n        setName('');\n    }\n\n    async function fetchMoviesSearch(query) {\n        const API_KEY = '61d280fbc4e0ab3fee827783c53f7600';\n        const BASE_URL = 'https://api.themoviedb.org/3/';\n\n        try {\n            const movie = await axios.get(\n                `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}`);\n            console.log(movie.data.results);\n            return movie.data.results;\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    return(\n        <>\n            <form className={ s.SearchForm } onSubmit={ handleSubmit }>\n            <input\n                className={ s.SearchFormInput }\n                type=\"text\"\n                onChange={ handleChange }\n                autoComplete=\"off\"\n                autoFocus\n                placeholder=\"Search movies\"\n            />\n            <button type=\"submit\" className={ s.SearchFormButton }>\n                <span className={ s.SearchFormButtonLabel }>Search</span>\n            </button>\n            </form>\n\n            <ul>\n                {values && values.map(value => <li key={value.id}>\n                    <Link to={{\n                    pathname:`/movies/${value.id}`,\n                    state: { from:location},\n                    }} \n                    className={ s.linksOfMovies }><b>{value.original_title}</b></Link></li>)\n                }\n            </ul>\n        </>\n    )\n\n}\nexport default MoviesPage;"],"names":["axios","require","location","useLocation","useState","name","setName","values","setValues","query","get","movie","console","log","data","results","className","s","onSubmit","e","preventDefault","trim","fetchMoviesSearch","then","alert","type","onChange","value","currentTarget","autoComplete","autoFocus","placeholder","map","to","pathname","id","state","from","original_title"],"sourceRoot":""}